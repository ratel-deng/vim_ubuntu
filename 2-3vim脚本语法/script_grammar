			简述
	vimrc是vim的脚本文件，在该文件内可以设置命令选项
	在编辑页面，可以使用EX命令和命令行命令

			变量
	由字符，数字，下划线组成，不能用数字开头
	:let 列出所有变量
	:echo var 打印变量
定义变量：
	局部变量 :let s:var=1（只在本文件有效）
	全局变量 :let g:var=1（在当前环境下都有效）
	vim预定义变量 :let v:var=1
	窗口局部变量 :let w:var=1
	缓冲区局部变量 :let b:var=1
删除变量：
	:unlet s:var 删除变量，变量不存在时会报错
	:unlet! s:var 删除变量，变量不存在时不会报错
	:unlet var 这样删除也是一样的，所以要避免命名重复
字符串变量：
	:let str="abcdef" 定义字符串变:
	
			表达式
列举：
	:echo 4*5+2 打印出22
	:echo "hello"." world" 打印出hello world "."符号是链接符
	:let i=4
	:echo i>5?"yes":"no" 判断结果输出，大于输出yes，不大于输出no
字符串，常量，变量都是表达式
其它表达式：
	$HOME 环境变量
	$name 选项
	@r 寄存器
			语句
条件语句：
	if{条件}
		{代码块}
	endif
逻辑操作：
	a==b a!=b a>b a<b a>=b 与c语言中相同
	a=~b a是否匹配b
	a!~b a是否不匹配b
	a!~#b #大小写敏感
	a=~? 大小写不敏感，默认
循环：
	while 条件 开始循环体
	endwhile 结束循环体

			执行一个表达式
执行冒号命令：
	:execute "命令模式下的命令"
执行普通命令：
	:normal 普通模式下的命令

			函数
定义一个函数：
	function 函数名(可选参数)
	函数体
	endfunction 函数结尾
强制定义一个函数：
	function! 这个是强制的，同名的话会覆盖原称函数
参数：
	a:参数名 参数调用
调用函数：
	call 函数名
查看函数：
	:function 函数名
删除函数：
	:delfunction 函数名

			数据类型
vim数据类型：
	基本数据类型：字符串，数值
	复合数据类型：列表，字典
列表的定义与使用：
	:let all=['a','b','c'] 列表的定义
	:call add(all,'d') 增加元素
	:echo all 打印出['a','b','c','d']
	:for n in all
	:	echo n
	:endfor 结束循环
	:echo split('hello vim') 切片为列表并打印['hello','vim']
字典的定义与使用：
	:let book={'a':'A','b':'B'} 定义一个字典，本质上是a映射A
	:echo book['a'] 输出A
	:for key in key(book)
	:echo key
	:endfor 遍历字典
字典函数：
	:echo book.a 打印出A
	:let book.b='BB' 重新赋值
	:echo book 打印{'a':'A','b':'BB'}


